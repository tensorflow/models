Parameter {
  name: 'brain_parser_embedding_dims'
  value: '8;8;8'
}
Parameter {
  name: 'brain_parser_features'
  value: 'input.token.word input(1).token.word input(2).token.word stack.token.word stack(1).token.word stack(2).token.word;input.tag input(1).tag input(2).tag stack.tag stack(1).tag stack(2).tag;stack.child(1).label stack.child(1).sibling(-1).label stack.child(-1).label stack.child(-1).sibling(1).label'
}
Parameter {
  name: 'brain_parser_embedding_names'
  value: 'words;tags;labels'
}
input {
  name: 'training-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'syntaxnet/testdata/mini-training-set'
  }
}
input {
  name: 'tuning-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'syntaxnet/testdata/mini-training-set'
  }
}
input {
  name: 'parsed-tuning-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'label-map'
  file_format: 'text'
  Part {
    file_pattern: 'OUTPATH/label-map'
  }
}
input {
  name: 'word-map'
  Part {
    file_pattern: 'OUTPATH/word-map'
  }
}
input {
  name: 'lcword-map'
  Part {
    file_pattern: 'OUTPATH/lcword-map'
  }
}
input {
  name: 'tag-map'
  Part {
    file_pattern: 'OUTPATH/tag-map'
  }
}
input {
  name: 'category-map'
  Part {
    file_pattern: 'OUTPATH/category-map'
  }
}
input {
  name: 'char-map'
  Part {
    file_pattern: 'OUTPATH/char-map'
  }
}
input {
  name: 'char-ngram-map'
  Part {
    file_pattern: 'OUTPATH/char-ngram-map'
  }
}
input {
  name: 'prefix-table'
  Part {
    file_pattern: 'OUTPATH/prefix-table'
  }
}
input {
  name: 'suffix-table'
  Part {
    file_pattern: 'OUTPATH/suffix-table'
  }
}
input {
  name: 'tag-to-category'
  Part {
    file_pattern: 'OUTPATH/tag-to-category'
  }
}
input {
  name: 'stdout'
  record_format: 'conll-sentence'
  Part {
    file_pattern: '-'
  }
}
