component {
  name: "parser"
  num_actions: 100
  transition_system {
    registered_name: "arc-standard"
    parameters {
      key: "entity_name_tokenizer"
      value: "pre-tokenized"
    }
    parameters {
      key: "language"
      value: "en"
    }
    parameters {
      key: "neurosis_feature_syntax_version"
      value: "2"
    }
    parameters {
      key: "parser_skip_deterministic"
      value: "false"
    }
    parameters {
      key: "parser_transition_system"
      value: "arc-standard"
    }
  }
  resource {
    name: "tag-map"
    part {
      file_pattern: "TESTDATA/syntaxnet_tagger.tag-map"
      file_format: "text"
    }
  }
  resource {
    name: "word-map"
    part {
      file_pattern: "TESTDATA/syntaxnet_tagger.word-map"
      file_format: "text"
    }
  }
  resource {
    name: "label-map"
    part {
      file_pattern: "TESTDATA/syntaxnet_tagger.label-map"
      file_format: "text"
    }
  }
  fixed_feature {
    name: "tags"
    fml: "input.tag stack.tag stack(1).tag"
    embedding_dim: 32
    vocabulary_size: 51
    size: 3
    predicate_map: "hashed"
  }
  fixed_feature {
    name: "words"
    fml: "input.word"
    embedding_dim: 64
    vocabulary_size: 39396
    size: 1
    predicate_map: "hashed"
  }
  linked_feature {
    name: "rnn"
    fml: "stack.focus"
    embedding_dim: 32
    size: 1
    source_component: "parser"
    source_translator: "shift-reduce-step"
    source_layer: "layer_0"
  }
  backend {
    registered_name: 'SyntaxNetComponent'
  }
  component_builder {
    registered_name: 'DynamicComponentBuilder'
  }
  network_unit {
    registered_name: 'FeedForwardNetwork'
    parameters {
      key: 'hidden_layer_sizes'
      value: '64'
    }
  }
}
